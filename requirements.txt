# Enhanced Requirements for Master's Thesis Forex Prediction System
# Optimized for macOS with Apple Silicon (M3 Pro)
# Python 3.9+ recommended

# Core Data Science Libraries
numpy>=1.24.3,<2.0.0
pandas>=2.0.3,<3.0.0
scipy>=1.10.1,<2.0.0
scikit-learn>=1.3.0,<2.0.0

# Deep Learning - TensorFlow for Apple Silicon
# Install tensorflow-macos and tensorflow-metal separately for best performance
# pip install tensorflow-macos tensorflow-metal
tensorflow-macos>=2.13.0,<3.0.0
tensorflow-metal>=1.0.0
keras>=2.13.0,<3.0.0
tensorboard>=2.13.0

# Gradient Boosting Libraries
xgboost>=1.7.6,<2.0.0
lightgbm>=4.0.0,<5.0.0
catboost>=1.2,<2.0.0

# Optimization Libraries
optuna>=3.2.0,<4.0.0
optuna-dashboard>=0.10.0  # For visualization
hyperopt>=0.2.7
scikit-optimize>=0.9.0
bayesian-optimization>=1.4.3

# Technical Analysis
TA-Lib>=0.4.28  # May need to install via conda for M1/M2/M3: conda install -c conda-forge ta-lib
pandas-ta>=0.3.14b
yfinance>=0.2.28  # For downloading financial data

# Visualization
matplotlib>=3.7.2,<4.0.0
seaborn>=0.12.2,<1.0.0
plotly>=5.15.0,<6.0.0
kaleido>=0.2.1  # For plotly static image export

# Data Handling and Processing
pyarrow>=12.0.1  # For faster parquet operations
fastparquet>=2023.7.0
h5py>=3.9.0  # For HDF5 support
tables>=3.8.0  # PyTables for large datasets

# Progress Bars and Logging
tqdm>=4.65.0
colorlog>=6.7.0
rich>=13.5.0  # Enhanced terminal output

# Web Framework for Dashboard (optional)
streamlit>=1.25.0  # For creating web dashboards
dash>=2.11.1  # Alternative to streamlit

# Development Tools
jupyter>=1.0.0
jupyterlab>=4.0.3
ipywidgets>=8.0.7
notebook>=7.0.0

# Testing and Quality
pytest>=7.4.0
pytest-cov>=4.1.0
black>=23.7.0  # Code formatter
flake8>=6.0.0  # Linter
mypy>=1.4.1  # Type checker
pre-commit>=3.3.3

# Utilities
pyyaml>=6.0.1
python-dotenv>=1.0.0
click>=8.1.6  # CLI framework
joblib>=1.3.1  # Parallel processing
psutil>=5.9.5  # System monitoring
py-cpuinfo>=9.0.0  # CPU information

# Time Series Specific
statsmodels>=0.14.0
pmdarima>=2.0.3  # Auto ARIMA
arch>=6.1.0  # ARCH/GARCH models
prophet>=1.1.4  # Facebook Prophet (optional)

# Additional ML Libraries
imbalanced-learn>=0.11.0  # For handling imbalanced datasets
shap>=0.42.1  # Model interpretability
eli5>=0.13.0  # Alternative interpretability

# Database Support (optional)
sqlalchemy>=2.0.19
pymongo>=4.4.1  # MongoDB
redis>=4.6.0  # Redis caching

# API and Networking
requests>=2.31.0
aiohttp>=3.8.5  # Async HTTP
websocket-client>=1.6.1

# Profiling and Performance
memory-profiler>=0.61.0
line-profiler>=4.0.3
py-spy>=0.3.14  # Sampling profiler

# Documentation
sphinx>=7.1.1
sphinx-rtd-theme>=1.3.0

# Financial Metrics
empyrical>=0.5.5  # Risk metrics
pyfolio>=0.9.2  # Portfolio analysis
quantlib>=1.31  # May need special installation for M1/M2/M3

# Multiprocessing for M1/M2/M3
multiprocess>=0.70.15  # Better multiprocessing support

# Data Validation
pydantic>=2.1.1
marshmallow>=3.20.1
cerberus>=1.3.5

# Environment Management
python-decouple>=3.8

# Optional Advanced Libraries (uncomment if needed)
# ray>=2.6.1  # Distributed computing
# dask>=2023.7.1  # Parallel computing
# vaex>=4.17.0  # Out-of-core DataFrames
# rapids-cudf  # GPU DataFrames (not available for M1/M2/M3)

# Note for Apple Silicon Users:
# 1. Install Miniforge for ARM64 architecture
# 2. Create conda environment: conda create -n forex python=3.9
# 3. Install TA-Lib via conda: conda install -c conda-forge ta-lib
# 4. Install TensorFlow: pip install tensorflow-macos tensorflow-metal
# 5. Install other packages: pip install -r requirements.txt

# For best performance on M3 Pro:
# - Use tensorflow-metal for GPU acceleration
# - Enable multiprocessing with proper fork safety
# - Use vectorized operations with NumPy/Pandas
# - Consider using Ray for distributed computing